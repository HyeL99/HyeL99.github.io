[ { "title": "HTML 입력 양식", "url": "/posts/html08-form/", "categories": "Coding Diary, HTML/CSS", "tags": "html, 코딩일지, 입력", "date": "2022-09-07 17:47:00 +0900", "snippet": "Form 요소웹 페이지에서는 form 요소를 사용하여 사용자로부터 입력을 받을 수 있으며,사용자가 입력한 데이터를 서버로 보낼 수 있다.form 요소는 다음과 같은 문법으로 사용한다.문법&lt;form action = \"처리할페이지주소\" method=\"get/post\"&gt;&lt;/form&gt;action 속성은 입력받은 데이터를 처리할 때 서버 상의 스크립트 파일의 주소를 명시한다.이렇게 전달받은 데이터를 처리하는 스크립트 파일을 폼 핸들러(form-handler)라고 한다.method 속성은 입력받은 데이터를 서버에 전달할 방식을 명시한다.따라서 사용자가 form 요소를 통해 입력한 데이터는 action 속성에 명시된 위치로 method 속성의 방식을 통해 전달된다. method 속성 다양한 타입의 input 요소 텍스트 입력 비밀번호 입력 라디오 버튼 체크박스 파일 선택 선택 입력 문장 입력 버튼 전송 버튼 필드셋(fieldset) HTML에서 추가된 다양한 타입의 input 요소 datalist 요소 keygen 요소 output 요소 Input 요소의 속성 value 속성 readonly 속성 disabled 속성 maxlength 속성 size 속성 HTML5에서 추가된 form 요소의 속성 autocomplete novalidate HTML5에서 추가된 input 요소의 속성 autocomplete autofocus form formaction formenctype formmethod formnovalidate formtarget height and width list min and max multiple pattern (정규식) placeholder required step 제목문법&lt;태그이름 style=\"속성이름 : 속성값\"&gt;&lt;/태그이름&gt;&lt;p style=\"margin: 0;\"&gt;style 속성을 이용한 배경색 변경&lt;/p&gt; ▶ 실행결과 소제목 문법 &lt;태그이름 style=\"속성이름 : 속성값\"&gt;&lt;/태그이름&gt; &lt;p style=\"margin: 0;\"&gt;style 속성을 이용한 배경색 변경&lt;/p&gt; ▶ 실행결과 출처TCP SCHOOL HTML" }, { "title": "HTML 공간 분할", "url": "/posts/html07-display/", "categories": "Coding Diary, HTML/CSS, display, iframe, layout", "tags": "html, 코딩일지", "date": "2022-09-07 10:15:00 +0900", "snippet": "블록과 인라인HTML의 모든 요소는 해당 요소가 웹 브라우저에 어떻게 보이는가를 결정짓는 display 속성을 가진다.display 속성은 주로 4가지 속성값이 쓰이는데, 태그마다 기본값이 다르다. none: 보이지 않음, 영역도 차지하지 않음 block: 블록 박스, 가로 영역을 모두 채우고 크기를 지정할 수 있으며, 다음 태그는 아랫줄에 표시됨 inline: 인라인 박스, 줄바꿈 되지 않고, 크기를 지정할 수 없음 inline-block: block과 inline의 중간 형태, 줄바꿈 되지 않고 크기를 지정할 수 있음이중 레이아웃에 주로 쓰이는 속성값은 아래 두가지 값이다. 블록(block) 인라인(inline) 블록(block) 타입의 요소 display 속성값이 블록(block)인 요소는 언제나 새로운 라인(line)에서 시작하며, 해당 라인의 모든 너비를 차지한다. 요소는 다른 HTML 요소들을 하나로 묶는 데 자주 사용되는 대표적인 블록(block) 요소이다. 요소는 주로 여러 요소들의 스타일을 한 번에 적용하기 위해 사용된다. 인라인(inline) 타입의 요소 display 속성값이 인라인(inline)인 요소는 새로운 라인(line)에서 시작하지 않는다. 또한, 요소의 너비도 해당 라인 전체가 아닌 해당 HTML 요소의 내용(content)만큼만 차지한다. 요소는 텍스트(text)의 특정 부분을 묶는 데 자주 사용되는 인라인(inline) 요소이다. 요소는 주로 텍스트의 특정 부분에 따로 스타일을 적용하기 위해 사용된다. &lt;div style=\"background-color:lightgrey; color:green; text-align:center\"&gt; &lt;h4&gt;div요소를 이용한 스타일 적용&lt;/h4&gt; &lt;p&gt;div요소로 여러 요소들을 묶은 뒤, style 속성과 클래스 등을 이용하여 한 번에 스타일을 적용할 수 있다.&lt;/p&gt; &lt;p&gt; 이렇게 &lt;span style=\"border: 3px solid red\"&gt;span요소로 텍스트의 일부분&lt;/span&gt; 만을 따로 묶은 후에 스타일을 적용할 수 있다. &lt;/p&gt; &lt;/div&gt; ▶ 실행결과 div요소를 이용한 스타일 적용 div요소로 여러 요소들을 묶은 뒤, style 속성과 클래스 등을 이용하여 한 번에 스타일을 적용할 수 있다. 이렇게 span요소로 텍스트의 일부분 만을 따로 묶은 후에 스타일을 적용할 수 있다. ifram 요소iframe이란 내부 프레임(inline frame)이라는 의미로,iframe요소를 이용하면 어떠한 제한 없이 하나의 HTML 문서 내에서 다른 HTML 문서를 보여줄 수 있으며 동영상도 보여줄 수 있다.문법&lt;iframe src=\"삽입할페이지주소\"&gt;&lt;/iframe&gt;iframe요소는 종료 태그가 존재하며, 명시된 크기로 창의 사이즈가 고정된다.&lt;iframe src=\"/\" style=\"width:100%; height:300px\"&gt;&lt;/iframe&gt; ▶ 실행결과 iframe 요소의 테두리 변경 iframe 요소는 기본적으로 검정색 테두리(border)를 가진다. 이러한 테두리 스타일은 style 속성에서 border 속성을 이용하면 변경할 수 있다. 테두리를 설정하고 싶지 않다면 style 속성에서 border 속성값을 none으로 설정하면 된다. &lt;iframe src=\"/\" style=\"width:100%; height:300px; border: 10px solid crimson\"&gt; &lt;/iframe&gt; ▶ 실행결과 &lt;iframe src=\"/\" style=\"width:100%; height:300px; border: none\"&gt; &lt;/iframe&gt; ▶ 실행결과 iframe 요소의 페이지 변경하기 &lt;a&gt;태그를 이용하면 iframe 요소의 최초 페이지를 중간에 변경할 수 있다. &lt;a&gt;태그의 target 속성과 iframe 요소의 name 속성을 연결하면, &lt;a&gt;태그를 통해 iframe 요소의 페이지를 변경할 수 있다. &lt;iframe src=\"/\" name= \"frame_target\" style=\"width:100%; height:300px; border: none\"&gt; &lt;/iframe&gt; &lt;a href=\"/archives\" target=\"frame_target\"&gt;Go to Arcaives ▶&lt;/a&gt; &lt;br&gt; &lt;a href=\"/\" target=\"frame_target\"&gt;Go to Home ▶&lt;/a&gt; ▶ 실행결과 Go to Arcaives ▶ Go to Home ▶ 레이아웃(Layout)레이아웃(Layout)이란 제한된 공간 안에 효과적으로 배열하는 일을 의미한다.HTML에서는 다음과 같은 방법으로 레이아웃을 작성할 수 있다. div요소를 이용한 레이아웃 HTML5 레이아웃 table 요소를 이용한 레이아웃 div요소를 이용한 레이아웃 div 요소는 CSS 스타일을 손쉽게 적용할 수 있으므로, 레이아웃을 작성하는데 자주 사용된다. &lt;div id=\"header\"&gt; &lt;p&gt;HEADER 영역&lt;/p&gt; &lt;/div&gt; &lt;div id=\"nav\"&gt; &lt;h2&gt;NAV 영역&lt;/h2&gt; &lt;/div&gt; &lt;div id=\"section\"&gt; &lt;p&gt;SECTION 영역&lt;/p&gt; &lt;/div&gt; &lt;div id=\"footer\"&gt; &lt;h2&gt;FOOTER 영역&lt;/h2&gt; &lt;/div&gt; ▶ 실행결과 HEADER 영역 NAV 영역 SECTION 영역SECTION 영역SECTION 영역 FOOTER 영역 HTML5 레이아웃 HTML5에서는 웹 페이지의 레이아웃만을 위한 별도의 시멘틱 태그들을 제공한다. 의미 요소 설명 &lt;header&gt; HTML 문서나 섹션(section) 부분에 대한 헤더(header)를 정의함. &lt;nav&gt; HTML 문서의 탐색 링크를 정의함. &lt;section&gt; HTML 문서에서 섹션(section) 부분을 정의함. &lt;article&gt; HTML 문서에서 독립적인 하나의 글(article) 부분을 정의함. &lt;aside&gt; HTML 문서에서 페이지 부분 이외의 콘텐츠(content)를 정의함.&nbsp; &lt;footer&gt; HTML 문서나 섹션(section) 부분에 대한 푸터(footer)를 정의함. table 요소를 이용한 레이아웃 table 요소를 이용하여 레이아웃을 작성하는 방법은 오래전에 사용하던 방식이며, 현재는 거의 사용하지 않는다. table 요소는 레이아웃을 만들기 위해 설계된 요소가 아니라서, 테이블로 작성된 레이아웃은 수정이 매우 힘들다. 따라서 되도록이면 사용하지 않는 편이 좋다. Header 영역 Nav 영역 SECTION 영역SECTION 영역SECTION 영역 Footer 영역 출처TCP SCHOOL HTML" }, { "title": "HTML 기본 요소 - 테이블 태그", "url": "/posts/html06-table/", "categories": "Coding Diary, HTML/CSS", "tags": "html, 코딩일지, table", "date": "2022-09-06 20:37:00 +0900", "snippet": "HTML 테이블 (Table)테이블(Table)이란 표를 의미하며, &lt;table&gt;태그는 표를 만들어주는 태그이다. &lt;table&gt; 구성 태그 &lt;tr&gt;태그는 테이블에서 열을 구분한다. &lt;th&gt;태그는각 열의 제목을 나타내며, 모든 내용은 자동으로 굵은 글씨에 가운데 정렬이 된다. &lt;td&gt;태그는 테이블의 열을 각각의 셀(cell)로 나누어 준다. &lt;table&gt; &lt;tr&gt; &lt;th&gt;참치&lt;/th&gt; &lt;th&gt;고래&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;상어&lt;/td&gt; &lt;td&gt;문어&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;오징어&lt;/td&gt; &lt;td&gt;고등어&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;▶ 실행결과 참치 고래 상어 문어 오징어 고등어 CSS의 border 속성을 이용하여 테이블에 테두리를 표현할 수 있다.border 속성값을 따로 명시하지 않으면, 해당 테이블은 언제나 빈 테두리를 가지게 된다.&lt;table&gt;태그와 &lt;th&gt;태그, &lt;td&gt;태그가 모두 자신만의 테두리를 가지고 있기 때문에 모든 태그에 border 속성을 주게 되면 테두리가 2줄로 나타나게 된다. &lt;table style=\"border: 2px solid red; border-collapse: unset\"&gt; &lt;tr style=\"background:#424380; color: #fff;\"&gt; &lt;th style=\"border: 2px solid blue\"&gt;참치&lt;/th&gt; &lt;th style=\"border: 2px solid blue\"&gt;고래&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=\"border: 2px solid blue\"&gt;상어&lt;/td&gt; &lt;td style=\"border: 2px solid blue\"&gt;문어&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=\"border: 2px solid blue\"&gt;오징어&lt;/td&gt; &lt;td style=\"border: 2px solid blue\"&gt;고등어&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;▶ 실행결과 참치 고래 상어 문어 오징어 고등어 이때 border-collapse 속성값을 collapse로 설정하면, 테이블의 테두리를 한 줄로 표현할 수 있다. &lt;table style=\"border: 2px solid red; border-collapse: collapse\"&gt; &lt;tr style=\"background:#424380; color: #fff;\"&gt; &lt;th style=\"border: 2px solid blue\"&gt;참치&lt;/th&gt; &lt;th style=\"border: 2px solid blue\"&gt;고래&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=\"border: 2px solid blue\"&gt;상어&lt;/td&gt; &lt;td style=\"border: 2px solid blue\"&gt;문어&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td style=\"border: 2px solid blue\"&gt;오징어&lt;/td&gt; &lt;td style=\"border: 2px solid blue\"&gt;고등어&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;▶ 실행결과 참치 고래 상어 문어 오징어 고등어 테이블의 열 합치기 colspan 속성을 사용하면 테이블의 열(column)을 합칠 수 있다. &lt;table&gt; &lt;tr&gt; &lt;td&gt;참치&lt;/td&gt; &lt;td colspan=\"2\"&gt;고래&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;상어&lt;/td&gt; &lt;td&gt;문어&lt;/td&gt; &lt;td&gt;꽁치&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; ▶ 실행결과 참치 고래 상어 문어 꽁치 테이블의 행 합치기 rowspan 속성을 사용하면 테이블의 행(row)을 합칠 수 있다. &lt;table&gt; &lt;tr&gt; &lt;td&gt;참치&lt;/td&gt; &lt;td&gt;고래&lt;/td&gt; &lt;td&gt;날치&lt;/td&gt;\t\t &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan=\"2\"&gt;상어&lt;/td&gt; &lt;td&gt;문어&lt;/td&gt;\t\t &lt;td&gt;꽁치&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;고등어&lt;/td&gt;\t\t &lt;td&gt;돌고래&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; ▶ 실행결과 참치 고래 날치\t\t 상어 문어\t\t 꽁치 고등어\t\t 돌고래 테이블의 열과 행 합치기 colspan 속성과 rowspan 속성을 함께 사용하면, 더욱 복잡한 테이블도 표현할 수 있다. &lt;table&gt; &lt;tr&gt; &lt;td colspan=\"6\"&gt;1&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"6\"&gt;2&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td rowspan=\"3\"&gt;3&lt;/td&gt; &lt;td rowspan=\"3\"&gt;4&lt;/td&gt; &lt;td colspan=\"2\"&gt;5&lt;/td&gt; &lt;td&gt;6&lt;/td&gt; &lt;td&gt;7&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"3\"&gt;8&lt;/td&gt; &lt;td&gt;9&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td colspan=\"4\"&gt;10&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; ▶ 실행결과 1 2 3 4 5 6 7 8 9 10 테이블의 캡션(caption) 설정 &lt;caption&gt;태그를 사용하면 테이블 상단에 제목이나 짧은 설명을 붙일 수 있다. &lt;table&gt; &lt;caption&gt;해양 생물&lt;/caption&gt; &lt;tr&gt; &lt;td&gt;참치&lt;/td&gt; &lt;td&gt;고래&lt;/td&gt; &lt;td&gt;날치&lt;/td&gt;\t\t &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;상어&lt;/td&gt; &lt;td&gt;문어&lt;/td&gt;\t\t &lt;td&gt;꽁치&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; ▶ 실행결과 해양 생물 참치 고래 날치\t\t 상어 문어\t\t 꽁치 출처TCP SCHOOL HTML" }, { "title": "HTML 기본 요소 - 리스트 태그", "url": "/posts/html05-list/", "categories": "Coding Diary, HTML/CSS", "tags": "html, 코딩일지, list", "date": "2022-09-06 17:56:00 +0900", "snippet": "HTML 리스트 (List)리스트(list)란 여러 요소들을 일렬로 나열한 목록이나 명단이다.리스트의 종류 순서가 없는 리스트 (unordered list) 순서가 있는 리스트 (ordered list) 정의 리스트 (definition list) 순서가 없는 리스트 순서가 없는 리스트는 &lt;ul&gt;태그로 시작하며, 리스트 요소는 &lt;li&gt;태그로 시작한다. 각각의 리스트 요소 앞에는 기본 마커(marker)로 검정색의 작은 원(bullet)이 위치한다. 마커의 종류 disc : 검정색 작은 원 모양 (기본설정) circle : 흰색 작은 원 모양 square : 사각형 모양 &lt;ul&gt; &lt;!-- list-style-type: disic --&gt; &lt;li&gt;disic list1&lt;/li&gt; &lt;li&gt;disic list2&lt;/li&gt; &lt;/ul&gt; &lt;ul style=\"list-style-type: circle\"&gt; &lt;li&gt;circle list1&lt;/li&gt; &lt;li&gt;circle list2&lt;/li&gt; &lt;/ul&gt; &lt;ul style=\"list-style-type: square\"&gt; &lt;li&gt;square list1&lt;/li&gt; &lt;li&gt;square list2&lt;/li&gt; &lt;/ul&gt; ▶ 실행결과 disic list1 disic list2 circle list1 circle list2 square list1 square list2 순서가 있는 리스트 순서가 있는 리스트는 &lt;ol&gt;태그로 시작하며, 리스트 요소는 &lt;li&gt;태그로 시작한다. 각각의 리스트 요소 앞에는 기본 마커(marker)로 아라비아 숫자가 위치한다. 마커의 종류 decimal : 숫자 (기본설정) upper-alpha : 영문 대문자 lower-alpha : 영문 소문자 upper-roman : 로마 숫자 대문자 lower-roman : 로마 숫자 소문자 &lt;ol&gt; &lt;!-- list-style-type: decimal --&gt; &lt;li&gt;decimal list1&lt;/li&gt; &lt;li&gt;decimal list2&lt;/li&gt; &lt;/ol&gt; &lt;ol style=\"list-style-type: upper-alpha\"&gt; &lt;li&gt;upper-alpha list1&lt;/li&gt; &lt;li&gt;upper-alpha list2&lt;/li&gt; &lt;/ol&gt; &lt;ol style=\"list-style-type: lower-alpha\"&gt; &lt;li&gt;lower-alpha list1&lt;/li&gt; &lt;li&gt;lower-alpha list2&lt;/li&gt; &lt;/ol&gt; &lt;ol style=\"list-style-type: upper-roman\"&gt; &lt;li&gt;upper-roman list1&lt;/li&gt; &lt;li&gt;upper-roman list2&lt;/li&gt; &lt;/ol&gt; &lt;ol style=\"list-style-type: lower-roman\"&gt; &lt;li&gt;lower-roman list1&lt;/li&gt; &lt;li&gt;lower-roman list2&lt;/li&gt; &lt;/ol&gt; ▶ 실행결과 decimal list1 decimal list2 upper-alpha list1 upper-alpha list2 lower-alpha list1 lower-alpha list2 upper-roman list1 upper-roman list2 lower-roman list1 lower-roman list2 정의 리스트 정의 리스트는 용어와 그에 대한 정의를 모아놓은 리스트로, &lt;dl&gt;태그로 시작한다. &lt;dt&gt;태그에는 용어의 이름이 들어가고, &lt;dd&gt;태그에는 해당 용어에 대한 정의가 들어간다. &lt;dl&gt; &lt;dt&gt;호박&lt;/dt&gt; &lt;dd&gt;- 박과의 한해살이 덩굴성 채소&lt;/dd&gt; &lt;dt&gt;상추&lt;/dt&gt; &lt;dd&gt;- 국화과의 한해살이 또는 두해살이풀&lt;/dd&gt; &lt;/dl&gt; ▶ 실행결과 호박 - 박과의 한해살이 덩굴성 채소 상추 - 국화과의 한해살이 또는 두해살이풀 출처TCP SCHOOL HTML" }, { "title": "HTML 기본 요소 - 링크 태그, 이미지 태그", "url": "/posts/html04-a-img/", "categories": "Coding Diary, HTML/CSS, link, a, bookmark, img, map", "tags": "html, 코딩일지", "date": "2022-09-06 16:02:00 +0900", "snippet": "HTML 링크 (Link)다른 페이지나 다른 사이트로 연결되는 수많은 하이퍼 링크(hyperlink)를 간단히 링크(link)라고도 부르며, HTML에서는 &lt;a&gt;태그로 표현한다.문법&lt;a href=\"링크주소\"&gt;HTML 링크&lt;/a&gt;&lt;a&gt;태그의 href 속성은 링크를 클릭하면 연결할 페이지나 사이트의 URL 주소를 명시합니다.&lt;a&gt;태그는 텍스트나 단락, 이미지 등 다양한 HTML 요소에 사용할 수 있습니다.&lt;a href=\"/\"&gt;Go to Home&lt;/a&gt; Go to Home target 속성 &lt;a&gt;태그의 target 속성은 링크로 연결된 문서를 어디에서 열지를 명시한다. target 속성값 설명 _blank 링크로 연결된 문서를 새 창이나 새 탭에서 오픈. _self 링크로 연결된 문서를 현재 프레임(frame)에서 오픈. (기본설정) _parent 링크로 연결된 문서를 부모 프레임(frame)에서 오픈. _top 링크로 연결된 문서를 현재 창의 가장 상위 프레임(frame)에서 오픈. 프레임(frame) 이름 링크로 연결된 문서를 지정된 프레임(frame)에서 오픈. &lt;p&gt;&lt;a href=\"/\" target=\"_blank\"&gt;blank&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=\"/\" target=\"_self\"&gt;self&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=\"/\" target=\"_parent\"&gt;parent&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=\"/\" target=\"_top\"&gt;top&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=\"/\" target=\"myframe\"&gt;myframe&lt;/a&gt;&lt;/p&gt; ▶ 실행결과 blank self parent top myframe 링크의 상태 (state) HTML 링크의 상태는 다음과 같이 네 가지로 구분할 수 있다. 링크의 상태 설명 link 아직 한 번도 방문한 적이 없는 상태 (기본설정) visited 한 번이라도 방문한 적이 있는 상태 hover 링크 위에 마우스를 올려놓은 상태 (스타일 미지정시 기본 상태와 동일) active 링크를 마우스로 누르고 있는 상태 사용할 수 있는 종류는 위와 같은 4가지이며, css에 선언하게 된다면 위의 순서대로 선언해야 한다. 순서가 틀릴 경우 정상적으로 동작하지 않을 수도 있다. 페이지 책갈피 태그의 name 속성을 이용하면 간단한 책갈피를 만들 수 있다. 우선 책갈피를 통해 가고 싶은 위치에 id 속성을 작성한다. 그다음에 작성한 id 속성값을 이용하여 다른 태그에서 링크를 걸면 된다. &lt;a href=\"#bookmark\"&gt;Go to BookMark&lt;/a&gt; &lt;br&gt; &lt;br&gt; &lt;a name=\"bookmark\"&gt;BookMark&lt;/a&gt; ▶ 실행결과 Go to BookMark BookMark HTML 이미지 (Image)이미지 태그는 문서에 이미지를 넣는데 사용하는 태그이다.주로 사용되는 이미지의 종류는 jpeg, png, gif 등이 있다. 이미지 삽입 HTML 문서 내에 이미지를 삽입할 때에는 &lt;img&gt;태그를 사용한다.&gt; &lt;img&gt;태그는 종료 태그가 없는 빈 태그이며, 아래와 같은 문법으로 사용한다. 문법 &lt;img src=\"이미지주소\" alt=\"대체문자열\"&gt; src 속성은 이미지가 저장된 주소의 URL 주소를 명시하며, alt 속성은 이미지가 로딩될 수 없는 경우 이미지 대신 나타낼 문자열을 설정한다. &lt;img src=\"/a.png\" alt=\"로딩할 수 없는 이미지\"&gt;&lt;br&gt; &lt;img src=\"https://via.placeholder.com/150\" alt=\"더미이미지\"&gt; ▶ 실행결과 이미지의 크기 설정 이미지의 크기는 스타일 속성을 사용하여 설정할 수 있다. width 속성값과 height 속성값을 이용하여 이미지의 너비와 높이를 조정할 수 있다. &lt;img src=\"https://via.placeholder.com/150\" alt=\"더미이미지\"&gt;&lt;br&gt; &lt;img src=\"https://via.placeholder.com/150\" alt=\"더미이미지\" style=\"width: 200px;\"&gt; ▶ 실행결과 이미지 테두리 설정 border 속성을 사용하여 이미지의 테두리 사용 여부와 굵기를 설정할 수 있다. &lt;img src=\"https://via.placeholder.com/150\" alt=\"더미이미지\" style=\"border: 3px solid red\"&gt; ▶ 실행결과 이미지에 링크 설정 이미지에 &lt;a&gt;태그를 이용하여 링크를 설정할 수 있다. &lt;a href=\"/\"&gt; &lt;img src=\"https://via.placeholder.com/150\" alt=\"더미이미지\"&gt; &lt;/a&gt; ▶ 실행결과 이미지 맵 만들기 HTML에서는 &lt;map&gt;태그를 이용하여 이미지 맵을 만들 수 있다. 이미지 맵(Image Map)이란 이미지의 일부를 버튼처럼 사용하는 기능이다. &lt;img&gt;태그의 usemap 속성을 &lt;map&gt;태그의 name 속성과 연결하면 이미지와 맵사이의 관계가 설정된다. &lt;map&gt;태그는 하나 이상의 &lt;area&gt;태그를 가지며, 이 태그가 바로 버튼과 같은 역할을 합니다. 이미지맵 태그 사용법 이미지의 usemap=”이름”과 map name=”이름”을 통일하게 지정한다. shape=”속성값”은 영역의 모양을 의미한다. react : 직사각형 circle : 원형 모양 poly : 형 영역 default : 전체 영역 coords=”정의”는 영역의 좌표를 의미한다. 링크가 없을땐 nohref 로 정의한다. &lt;img src=\"http://www.tcpschool.com/examples/images/img_imagemap.jpg\" alt=\"진실혹은거짓\" usemap=\"#vending\" style=\"width:320px; height:240px\" /&gt; &lt;map name=\"vending\"&gt; &lt;area shape=\"rect\" coords=\"90,60,180,130\" alt=\"거짓\" href=\"https://ko.wikipedia.org/wiki/%EA%B1%B0%EC%A7%93%EB%A7%90\"&gt; &lt;area shape=\"rect\" coords=\"210,200,70,130\" alt=\"진실\" href=\"https://ko.wikipedia.org/wiki/%EC%A7%84%EC%8B%A4\"&gt; &lt;/map&gt; &lt;p&gt;표지판을 눌러보세요!&lt;/p&gt; ▶ 실행결과 표지판을 눌러보세요! 출처TCP SCHOOL HTML" }, { "title": "HTML 기본 요소 - 스타일태그, 색 표현, 배경", "url": "/posts/html03-style/", "categories": "Coding Diary, HTML/CSS", "tags": "html, 코딩일지, style, color, background", "date": "2022-09-06 14:28:00 +0900", "snippet": "HTML 스타일 (Style)HTML 요소의 style 속성(attribute)을 이용하면 CSS 스타일을 HTML 요소에 직접 설정할 수 있다.하지만 이러한 style 속성을 이용한 방법은 오직 단 하나의 HTML 요소에만 스타일을 적용할 수 있다.문법&lt;태그이름 style=\"속성이름 : 속성값\"&gt;&lt;/태그이름&gt;&lt;p style=\"background-color:white\"&gt;style 속성을 이용한 배경색 변경&lt;/p&gt;&lt;p style=\"color:maroon\"&gt;style 속성을 이용한 글자색 변경&lt;/p&gt;&lt;p style=\"font-size:250%\"&gt;style 속성을 이용한 글자 크기 변경&lt;/p&gt;&lt;p style=\"text-align:center\"&gt;style 속성을 이용한 문단 정렬 변경&lt;/p&gt;&lt;p style=\"background-color:white; color:maroon; font-size:150%; text-align:center\"&gt;style 속성을 이용하여 한 번에 스타일링&lt;/p&gt; ▶ 실행결과 style 속성을 이용한 배경색 변경 style 속성을 이용한 글자색 변경 style 속성을 이용한 글자 크기 변경 style 속성을 이용한 문단 정렬 변경 style 속성을 이용하여 한 번에 스타일링style 속성값에 사용되는 css 속성과 속성값들은 세미콜론(;)을 이용하여 구분하며 마지막 css속성 세미콜론(;)은 생략할 수 있다.HTML 색 (Color)HTML에서 색을 표현하는 방법은 3가지가 있다. 색상 이름으로 표현 RGB 색상값으로 표현 16진수 색상값으로 표현 색상 이름으로 표현 W3C에서 정의한 표준 색상 이름을 이용하여 색상을 지정하는 방법이다. 아래 링크에서 정의된 표준 색상들을 확인할 수 있다. W3C 색상 키워드 &lt;p style=\"color:blue\"&gt;색상 이름으로 표현된 파란색&lt;/p&gt; &lt;p style=\"color:green\"&gt;색상 이름으로 표현된 녹색&lt;/p&gt; &lt;p style=\"color:silver\"&gt;색상 이름으로 표현된 은색&lt;/p&gt; &lt;p style=\"color:teal\"&gt;색상 이름으로 표현된 청록색&lt;/p&gt; &lt;p style=\"color:red\"&gt;색상 이름으로 표현된 빨간색&lt;/p&gt; ▶ 실행결과 색상 이름으로 표현된 파란색 색상 이름으로 표현된 녹색 색상 이름으로 표현된 은색 색상 이름으로 표현된 청록색 색상 이름으로 표현된 빨간색 RGB 색상값으로 표현 모니터나 스크린은 빨간색(Red), 녹색(Green), 파란색(Blue)을 혼합하여 색을 표현한다. HTML에서도 위와 같이 세 가지 색을 가지고 색을 표현하는 RGB 색상을 사용한다. RGB 색상의 기본색(Red, Green, Blue)은 각각 0부터 255까지의 범위를 가진다. &lt;p style=\"color:rgb(0,0,255)\"&gt;RGB 색상값으로 표현된 파란색&lt;/p&gt; &lt;p style=\"color:rgb(0,128,0)\"&gt;RGB 색상값으로 표현된 녹색&lt;/p&gt; &lt;p style=\"color:rgb(192,192,192)\"&gt;RGB 색상값으로 표현된 은색&lt;/p&gt; &lt;p style=\"color:rgb(0,128,128)\"&gt;RGB 색상값으로 표현된 청록색&lt;/p&gt; &lt;p style=\"color:rgb(255,0,0)\"&gt;RGB 색상값으로 표현된 빨간색&lt;/p&gt; ▶ 실행결과 RGB 색상값으로 표현된 파란색 RGB 색상값으로 표현된 녹색 RGB 색상값으로 표현된 은색 RGB 색상값으로 표현된 청록색 RGB 색상값으로 표현된 빨간색 16진수 색상값으로 표현 16진수 색상값은 RGB 색상값을 각각 16진수로 변환한 것이다. 따라서 각각의 기본색(Red, Green, Blue)은 각각 00부터 ff까지의 범위를 가진다. 예를 들면, 빨간색을 나타내는 RGB 색상값인 rgb(255,0,0)은 16진수 색상값으로는 #ff0000이 되는 것입니다. &lt;p style=\"color:#0000ff\"&gt;16진수 색상값으로 표현된 파란색&lt;/p&gt; &lt;p style=\"color:#008000\"&gt;16진수 색상값으로 표현된 녹색&lt;/p&gt; &lt;p style=\"color:#c0c0c0\"&gt;16진수 색상값으로 표현된 은색&lt;/p&gt; &lt;p style=\"color:#008080\"&gt;16진수 색상값으로 표현된 청록색&lt;/p&gt; &lt;p style=\"color:#ff0000\"&gt;16진수 색상값으로 표현된 빨간색&lt;/p&gt; ▶ 실행결과 16진수 색상값으로 표현된 파란색 16진수 색상값으로 표현된 녹색 16진수 색상값으로 표현된 은색 16진수 색상값으로 표현된 청록색 16진수 색상값으로 표현된 빨간색 HTML 배경 (Background)HTML 문서의 기본 배경(background)은 흰색이며, HTML 요소들도 각자 자신만의 배경을 가지고 있다.HTML에서는 이러한 배경을 다음과 같이 변경할 수 있다. 배경을 다른 색으로 변경 배경을 다른 이미지로 변경 배경을 다른 색으로 변경 HTML5 이전까지는 bgcolor 속성을 이용하여 HTML 요소의 배경색을 다른 색으로 변경할 수 있었으나 HTML5부터는 bgcolor 속성을 더 이상 지원하지 않으며, CSS를 이용하여 배경색을 변경하도록 하고 있다. body { background-color: lightblue; } p { background-color: #FFFFCC; } ▶ 실행결과 단락 태그 배경을 다른 이미지로 변경 background 속성을 이용하면 HTML 요소의 배경을 이미지(image)로 설정할 수 있다. 배경으로 이미지를 사용하면 웹 페이지의 로딩시간이 증가한다. 따라서 보통은 작은 사이즈의 이미지를 패턴(pattern)으로 만들어 배경 이미지로 반복 설정한다. &lt;p style=\"background: url(https://cdn.pixabay.com/photo/2020/09/09/02/12/smearing-5556288_960_720.jpg);\"&gt;단락 태그&lt;/p&gt; ▶ 실행결과 단락 태그 출처TCP SCHOOL HTML" }, { "title": "HTML 텍스트 태그", "url": "/posts/html02-text/", "categories": "Coding Diary, HTML/CSS", "tags": "html, 코딩일지, 제목, 단락, 서식, 인용구, 주석, 문자셋", "date": "2022-08-30 18:37:00 +0900", "snippet": "제목 태그 (Heading Tag)제목을 표현할 수 있는 태그로, &lt;h1&gt; 부터 &lt;h6&gt;까지 있다.&lt;h1&gt;h1 태그의 크기&lt;/h1&gt;&lt;h2&gt;h2 태그의 크기&lt;/h2&gt;&lt;h3&gt;h3 태그의 크기&lt;/h3&gt;&lt;h4&gt;h4 태그의 크기&lt;/h4&gt;&lt;h5&gt;h5 태그의 크기&lt;/h5&gt;&lt;h6&gt;h6 태그의 크기&lt;/h6&gt; ▶ 실행결과\th1 태그의 크기\th2 태그의 크기\th3 태그의 크기\th4 태그의 크기\th5 태그의 크기\th6 태그의 크기 ❗제목 태그의 또 다른 역할 제목 태그는 제목의 표현이라는 기능 외의 중요한 역할이 있다. 여러 검색 엔진은 각 웹사이트의 내용을 제목 태그를 이용하여 키워드를 수집하고, 그 내용을 파악한다. 따라서 HTML 문서 내에 포함되는 제목은 &lt;h&gt;태그로 작성해야 검색엔진에 의해 제대로 검색될 확률을 높일 수 있다. 단락 태그 (Paragraph Tag)단락이란 내용상 끊어서 구분할 수 있는 하나하나의 부분을 의미하며, 문단이라고도 한다.HTML에서는 &lt;p&gt;태그를 이용하여 이러한 단락을 표현한다.&lt;p&gt;단락 태그&lt;/p&gt;&lt;p&gt;단락 태그&lt;/p&gt; ▶ 실행결과 단락 태그 단락 태그 띄어쓰기와 줄 나누기 HTML 코드에서는 띄어쓰기나 줄 나누기를 여러 번 하더라도 웹 브라우저를 통해 나타나는 화면에는 전혀 영향을 주지 못한다. 웹 브라우저는 여러 번의 띄어쓰기나 줄 나누기를 오직 하나의 띄어쓰기나 줄로만 인식하기 때문이다. 따라서 새로운 단락을 만들지 않고 줄 나누기를 하고 싶을 때에는 &lt;br&gt;태그를 쓴다. &lt;br&gt;태그는 종료 태그가 없는 빈 태그(empty tag)이다. &lt;p&gt; 태그 내 줄바꿈 테스트 br없이 엔터 2번하고 쓴 문장 &lt;br&gt; br태그를 하고 쓴 문장 &lt;/p&gt; ▶ 실행결과 태그 내 줄바꿈 테스트 br없이 엔터 2번하고 쓴 문장 br태그를 하고 쓴 문장 텍스트(text) 서식 미리 정의하기 HTML 코드에서 작성한 텍스트 서식을 그대로 표현하려면 &lt;pre&gt;태그를 사용한다. &lt;pre&gt; 태그(preformatted text) 내에 작성된 텍스트의 모든 띄어쓰기와 줄 나누기는 웹 브라우저에 그대로 표현된다. &lt;pre&gt; 태그 내 줄바꿈 테스트 br없이 엔터 2번하고 쓴 문장 &lt;br&gt; br태그를 하고 쓴 문장 &lt;/pre&gt; ▶ 실행결과 태그 내 줄바꿈 테스트 br없이 엔터 2번하고 쓴 문장 br태그를 하고 쓴 문장 수평 가로 구분선 단락을 나눌 때나 내용상의 구분을 표현하고자 할 때 &lt;hr&gt;태그를 이용하여 수평 가로 구분선을 사용한다. &lt;p&gt;단락1&lt;/p&gt; &lt;hr&gt; &lt;p&gt;단락2&lt;/p&gt; ▶ 실행결과 단락1 단락2 서식 태그 (Formatting Tag)서식 태그는 텍스트에 다양한 효과를 주는 태그이다. 강조 효과 텍스트를 굵게 표현하는 태그 &lt;b&gt;태그 : 단순히 텍스트를 굵게 표현한다. &lt;strong&gt;태그 : 텍스트를 굵게 표현하며 내용이 중요하다는 의미도 포함한다. &lt;p&gt;&lt;b&gt;\"이 부분\"&lt;/b&gt;은 단순히 글씨가 굵은 부분이에요!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;\"이 부분\"&lt;/strong&gt;은 중요한 부분이라서 굵게 표현됐어요!&lt;/p&gt; ▶ 실행결과 \"이 부분\"은 단순히 글씨가 굵은 부분이에요! \"이 부분\"은 중요한 부분이라서 굵게 표현됐어요! 이탤릭체를 표현하는 태그 &lt;i&gt;태그 : 단순히 텍스트를 이탤릭체로 표현한다. &lt;em&gt;태그 : 텍스트를 이탤릭체로 표현하며 내용이 중요하다는 의미도 포함한다. &lt;p&gt;&lt;i&gt;\"이 부분\"&lt;/i&gt;은 단순히 글씨가 이탤릭체인 부분이에요!&lt;/p&gt; &lt;p&gt;&lt;em&gt;\"이 부분\"&lt;/em&gt;은 중요한 부분이라서 이탤릭체로 표현됐어요!&lt;/p&gt; ▶ 실행결과 \"이 부분\"은 단순히 글씨가 이탤릭체인 부분이에요! \"이 부분\"은 중요한 부분이라서 이탤릭체로 표현됐어요! 하이라이팅 효과 &lt;mark&gt;태그 : 텍스트에 하이라이팅(highlighting) 효과를 적용시켜준다. &lt;p&gt;&lt;mark&gt;\"이 부분\"&lt;/mark&gt;만 하이라이팅하고 싶어요.&lt;/p&gt; ▶ 실행결과 \"이 부분\"만 하이라이팅하고 싶어요. 삭제 효과 &lt;del&gt;태그 : 텍스트 중앙에 가로줄을 만들어 텍스트를 지운 것과 같은 효과를 준다. &lt;p&gt;&lt;del&gt;\"이 부분\"&lt;/del&gt;을 지운 것처럼 하고 싶어요.&lt;/p&gt; ▶ 실행결과 \"이 부분\"을 지운 것처럼 하고 싶어요. 삽입 효과 &lt;ins&gt;태그(insert)는 텍스트 밑에 가로줄을 만들어 마치 빈칸에 텍스트를 삽입한 것과 같은 효과를 준다. &lt;p&gt;&lt;ins&gt;\"밑줄 친 부분\"&lt;/ins&gt;에 들어갈 알맞은 말을 고르세요.&lt;/p&gt; ▶ 실행결과 \"밑줄 친 부분\"에 들어갈 알맞은 말을 고르세요. 위첨자와 아래첨자 효과 위첨자는 &lt;sup&gt;태그(superscript)를 사용하여, 아래첨자는 &lt;sub&gt;태그(subscript)를 사용하여 각각 표현할 수 있다. &lt;p&gt;X&lt;sup&gt;2&lt;/sup&gt; + Y&lt;sup&gt;3&lt;/sup&gt; = Z&lt;/p&gt; &lt;p&gt;물을 나타내는 화학식은 H&lt;sub&gt;2&lt;/sub&gt;O 입니다.&lt;/p&gt; ▶ 실행결과 X2 + Y3 = Z 물을 나타내는 화학식은 H2O 입니다. 인용구 태그(Quotation Tag) 짧은 인용구 짧은 인용구는 &lt;q&gt;태그(quotation)를 사용하여 표현할 수 있으며, 자동으로 앞뒤에 큰 따옴표가 붙는다. &lt;p&gt; HTML의 정의는 &lt;q&gt;웹 페이지를 만들기 위한 하이퍼텍스트 마크업 언어&lt;/q&gt; 입니다. &lt;/p&gt; ▶ 실행결과 HTML의 정의는 웹 페이지를 만들기 위한 하이퍼텍스트 마크업 언어 입니다. 블록 인용구 길이가 긴 인용문은 &lt;blockquote&gt;태그(block quotation)를 사용하여 표현할 수 있다. &lt;blockquote&gt;태그는 이러한 인용 부분을 별도의 단락으로 구분하여 나타낸다. &lt;p&gt;HTML의 정의&lt;/p&gt; &lt;blockquote&gt; 인터넷 서비스의 하나인 월드 와이드 웹을 통해 볼 수 있는 문서를 만들 때 사용하는 프로그래밍 언어의 한 종류이다. &lt;/blockquote&gt; ▶ 실행결과 HTML의 정의 인터넷 서비스의 하나인 월드 와이드 웹을 통해 볼 수 있는 문서를 만들 때 사용하는 프로그래밍 언어의 한 종류이다. 축약형 표현 HTML에서 용어의 축약형을 표현하기 위해서는 &lt;abbr&gt;태그(abbreviation)를 사용한다. &lt;abbr&gt;태그 위에 마우스를 위치시키면 title 속성에 명시한 용어의 원형이 나타난다. &lt;p&gt;&lt;strong&gt;&lt;abbr title=\"HyperText Markup Language 5\"&gt;HTML5&lt;/abbr&gt;&lt;/strong&gt; 란 웹 문서를 제작하는 데 쓰이는 프로그래밍 언어인 HTML의 최신규격입니다.&lt;/p&gt; ▶ 실행결과 HTML5 란 웹 문서를 제작하는 데 쓰이는 프로그래밍 언어인 HTML의 최신규격입니다. 주소 표현 &lt;address&gt;태그를 사용하면 HTML에서 주소를 표현할 수 있습니다. 이러한 주소는 이탤릭체로 표현되며, 위아래로 약간의 공백이 자동으로 삽입된다. &lt;address&gt;깃허브시&lt;br&gt;HyeL99구 블로그로&lt;/address&gt; ▶ 실행결과 깃허브시 HyeL99구 블로그로 주석HTML 문서 내에서 주석 처리는 아래와 같이 한다.&lt;!-- 주석 내용 --&gt;주석의 시작태그는 &lt;!--이며, 주석의 종료태그는 --&gt;이다.❗주석 내부에 주석을 중첩하는 것은 불가능하다.&lt;p&gt;본문 내용&lt;/p&gt;&lt;!-- 주석 내용 --&gt; ▶ 실행결과 본문 내용위와 같이 HTML 주석은 절대 웹 페이지에 나타나지 않으며, HTML 코드에 삽입된 주석을 읽고싶다면, 웹 브라우저의 페이지 소스 보기 등을 통해 확인할 수 있다.문자셋 (Character set)웹 브라우저가 HTML 문서를 정확하게 나타내기 위해서는 해당 문서가 어떠한 문자셋으로 저장되었는지를 알아야 한다.따라서 HTML 문서가 저장될 때 사용된 문자셋에 대한 정보를 &lt;head&gt;태그 내의 태그에 명시한다. HTML4에서 UTF-8의 경우 : &lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\"&gt; HTML5에서 UTF-8의 경우 : &lt;meta charset=\"UTF-8\"&gt; 위의 두 예제는 해당 HTML 문서가 UTF-8 문자셋을 사용하여 저장되었음을 웹 브라우저에 알려준다. 문자셋의 종류 ASCII : 가장 처음 만들어진 문자셋으로, 인터넷에서 사용할 수 있는 127개의 영문자와 숫자로 이루어져 있다. ANSI : 윈도우즈에서 만든 문자셋으로, 총 256개의 문자 코드를 지원한다. ISO-8859-1 : 256개의 문자 코드를 지원하는 HTML4의 기본 문자셋이다. UTF-8 : 세상에 있는 거의 모든 문자를 표현할 수 있는 유니코드 문자를 지원하는 HTML5의 기본 문자셋이다. 출처TCP SCHOOL HTML" }, { "title": "HTML 개요", "url": "/posts/html01-basic/", "categories": "Coding Diary, HTML/CSS", "tags": "html, 코딩일지", "date": "2022-08-15 16:54:00 +0900", "snippet": "HTML이란?HTML은 HyperText Markup Language의 약자로, 웹 페이지를 만드는 데 사용하는 마크업 언어이다.HTML 문서는 HTML태그로 구성되며, 각각의 태그는 웹페이지의 기능이나 디자인을 결정하는데 사용된다. HTML 태그HTML 태그는 태그 이름을 꺾쇠 괄호(&lt;&gt;)로 감싸서 표현하며, 보통 시작 태그&lt;tagName&gt;와 종료 태그&lt;/tagName&gt;의 한 쌍으로 구성된다.태그에 따라 종료 태그가 없는 태그도 존재한다.HTML 기본 구조&lt;!DOCTYPE html&gt;&lt;html&gt;\t&lt;head&gt;\t\t&lt;title&gt;HTML문서 타이틀&lt;/title&gt;\t&lt;/head&gt;\t&lt;body&gt;\t\t&lt;h1&gt;제목 크기1&lt;/h1&gt;\t\t&lt;h2&gt;제목 크기2&lt;/h2&gt;\t\t&lt;p&gt;단락&lt;/p&gt;\t&lt;/body&gt;&lt;/html&gt; &lt;!DOCTYPE html&gt; : HTML5 문서임을 명시&lt;html&gt; : HTML 문서의 루트 요소 정의&lt;head&gt; : HTML 문서의 메타데이터(metadata) 정의&lt;title&gt; : HTML 문서의 제목을 정의&lt;body&gt; : 웹 브라우저를 통해 보이는 내용 부분HTML 태그 구조html 태그는 여러 속성을 가질 수 있으며, 속성은 해당 태그에 대한 추가적인 정보를 제공한다.속성은 시작 태그 내에서만 정의되며, 속성 이름과 속성값(value)으로 표현된다.문법&lt;태그이름 속성명=\"속성값\"&gt;&lt;/태그이름&gt;:bangbang: 주의사항 속성 이름은 소문자로 작성 속성값은 항상 따옴표로 감싸줄 것출처TCP SCHOOL HTML" }, { "title": "Enable Google Page Views", "url": "/posts/enable-google-pv/", "categories": "Blogging, Tutorial", "tags": "google analytics, pageviews", "date": "2021-01-04 08:32:00 +0900", "snippet": "This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup.Set up Google AnalyticsCreate GA account and propertyFirst, you need to set up your account on Google analytics. While you create your account, you must create your first Property as well. Head to https://analytics.google.com/ and click on Start Measuring Enter your desired Account Name and choose the desired checkboxes Enter your desired Property Name. This is the name of the tracker project that appears on your Google Analytics dashboard Enter the required information About your business Hit Create and accept any license popup to set up your Google Analytics account and create your propertyCreate Data StreamWith your property created, you now need to set up Data Stream to track your blog traffic. After you signup, the prompt should automatically take you to create your first Data Stream. If not, follow these steps: Go to Admin on the left column Select the desired property from the drop-down on the second column Click on Data Streams Add a stream and click on Web Enter your blog’s URLIt should look like this:Now, click on the new data stream and grab the Measurement ID. It should look something like G-V6XXXXXXXX. Copy this to your _config.yml file:google_analytics: id: 'G-V6XXXXXXX' # fill in your Google Analytics ID # Google Analytics pageviews report settings pv: proxy_endpoint: # fill in the Google Analytics superProxy endpoint of Google App Engine cache_path: # the local PV cache data, friendly to visitors from GFW regionWhen you push these changes to your blog, you should start seeing the traffic on your Google Analytics. Play around with the Google Analytics dashboard to get familiar with the options available as it takes like 5 mins to pick up your changes. You should now be able to monitor your traffic in real time.Setup Page ViewsThere is a detailed tutorial available to set up Google Analytics superProxy. But, if you are interested to just quickly get your Chirpy-based blog display page views, follow along. These steps were tested on a Linux machine. If you are running Windows, you can use the Git bash terminal to run Unix-like commands.Setup Google App Engine Visit https://console.cloud.google.com/appengine Click on Create Application Click on Create Project Enter the name and choose the data center close to you Select Python language and Standard environment Enable billing account. Yeah, you have to link your credit card. But, you won’t be billed unless you exceed your free quota. For a simple blog, the free quota is more than sufficient. Go to your App Engine dashboard on your browser and select API &amp; Services from the left navigation menu Click on Enable APIs and Services button on the top Enable the following APIs: Google Analytics API On the left, Click on OAuth Consent Screen and accept Configure Consent Screen. Select External since your blog is probably hosted for the public. Click on Publish under Publishing Status Click on Credentials on the left and create a new OAuth Client IDs credential. Make sure to add an entry under Authorized redirect URIs that matches: https://&lt;project-id&gt;.&lt;region&gt;.r.appspot.com/admin/auth Note down the Your Client ID and Your Client Secret. You’ll need this in the next section. Download and install the cloud SDK for your platform: https://cloud.google.com/sdk/docs/quickstart Run the following commands: [root@bc96abf71ef8 /]# gcloud init~snip~Go to the following link in your browser: https://accounts.google.com/o/oauth2/auth?response_type=code&amp;client_id=XYZ.apps.googleusercontent.com&amp;redirect_uri=ABCDEFGEnter verification code: &lt;VERIFICATION CODE THAT YOU GET AFTER YOU VISIT AND AUTHENTICATE FROM THE ABOVE LINK&gt;You are logged in as: [blah_blah@gmail.com].Pick cloud project to use:[1] chirpy-test-300716[2] Create a new projectPlease enter numeric choice or text value (must exactly match listitem): 1[root@bc96abf71ef8 /]# gcloud info# Your selected project info should be displayed here Setup Google Analytics superProxy Clone the Google Analytics superProxy project on Github: https://github.com/googleanalytics/google-analytics-super-proxy to your local. Remove the first 2 lines in the src/app.yaml file: - application: your-project-id- version: 1 In src/config.py, add the OAUTH_CLIENT_ID and OAUTH_CLIENT_SECRET that you gathered from your App Engine Dashboard. Enter any random key for XSRF_KEY, your config.py should look similar to this #!/usr/bin/python2.7__author__ = 'pete.frisella@gmail.com (Pete Frisella)'# OAuth 2.0 Client SettingsAUTH_CONFIG = { 'OAUTH_CLIENT_ID': 'YOUR_CLIENT_ID', 'OAUTH_CLIENT_SECRET': 'YOUR_CLIENT_SECRET', 'OAUTH_REDIRECT_URI': '%s%s' % ( 'https://chirpy-test-XXXXXX.ue.r.appspot.com', '/admin/auth' )}# XSRF SettingsXSRF_KEY = 'OnceUponATimeThereLivedALegend' You can configure a custom domain instead of https://PROJECT_ID.REGION_ID.r.appspot.com.But, for the sake of keeping it simple, we will be using the Google provided default URL. From inside the src/ directory, deploy the app [root@bc96abf71ef8 src]# gcloud app deployServices to deploy:descriptor: [/tmp/google-analytics-super-proxy/src/app.yaml]source: [/tmp/google-analytics-super-proxy/src]target project: [chirpy-test-XXXX]target service: [default]target version: [VESRION_NUM]target url: [https://chirpy-test-XXXX.ue.r.appspot.com]Do you want to continue (Y/n)? YBeginning deployment of service [default]...╔════════════════════════════════════════════════════════════╗╠═ Uploading 1 file to Google Cloud Storage ═╣╚════════════════════════════════════════════════════════════╝File upload done.Updating service [default]...done.Setting traffic split for service [default]...done.Deployed service [default] to [https://chirpy-test-XXXX.ue.r.appspot.com]You can stream logs from the command line by running:$ gcloud app logs tail -s defaultTo view your application in the web browser run:$ gcloud app browse Visit the deployed service. Add a /admin to the end of the URL. Click on Authorize Users and make sure to add yourself as a managed user. If you get any errors, please Google it. The errors are self-explanatory and should be easy to fix. If everything went good, you’ll get this screen:Create Google Analytics QueryHead to https://PROJECT_ID.REGION_ID.r.appspot.com/admin and create a query after verifying the account. GA Core Reporting API query request can be created in Query Explorer.The query parameters are as follows: start-date: fill in the first day of blog posting end-date: fill in today (this is a parameter supported by GA Report, which means that it will always end according to the current query date) metrics: select ga:pageviews dimensions: select ga:pagePathIn order to reduce the returned results and reduce the network bandwidth, we add custom filtering rules 1: filters: fill in ga:pagePath=~^/posts/.*/$;ga:pagePath!@=. Among them, ; means using logical AND to concatenate two rules. If the site.baseurl is specified, change the first filtering rule to ga:pagePath=~^/BASE_URL/posts/.*/$, where BASE_URL is the value of site.baseurl. After Run Query, copy the generated contents of API Query URI at the bottom of the page and fill in the Encoded URI for the query of SuperProxy on GAE.After the query is saved on GAE, a Public Endpoint (public access address) will be generated, and we will get the query result in JSON format when accessing it. Finally, click Enable Endpoint in Public Request Endpoint to make the query effective, and click Start Scheduling in Scheduling to start the scheduled task.Configure Chirpy to Display Page ViewOnce all the hard part is done, it is very easy to enable the Page View on Chirpy theme. Your superProxy dashboard should look something like below and you can grab the required values.Update the _config.yml file of Chirpy project with the values from your dashboard, to look similar to the following:google_analytics: id: 'G-V6XXXXXXX' # fill in your Google Analytics ID pv: proxy_endpoint: 'https://PROJECT_ID.REGION_ID.r.appspot.com/query?id=&lt;ID FROM SUPER PROXY&gt;' cache_path: # the local PV cache data, friendly to visitors from GFW regionNow, you should see the Page View enabled on your blog.Reference Google Analytics Core Reporting API: Filters &#8617; " }, { "title": "Customize the Favicon", "url": "/posts/customize-the-favicon/", "categories": "Blogging, Tutorial", "tags": "favicon", "date": "2019-08-11 01:34:00 +0900", "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files: browserconfig.xml site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files: File(s) From Online Tool From Chirpy *.PNG ✓ ✗ *.ICO ✓ ✗ ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2019-08-09 21:55:00 +0900", "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll, and Bundler. In addition, Git is also required to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme: Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing. Forking on GitHub - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterCreate a new repository from the Chirpy Starter and name it &lt;GH_USERNAME&gt;.github.io, where GH_USERNAME represents your GitHub username.Option 2. Forking on GitHubFork Chirpy on GitHub and rename it to &lt;GH_USERNAME&gt;.github.io. Please note that the default branch code is in development. If you want the site to be stable, please switch to the latest tag and start writing.And then execute:$ bash tools/init.sh If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will: Removes some files or directories from your repository: .travis.yml files under _posts If the option --no-gh is provided, the directory .github will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension .hook of .github/workflows/pages-deploy.yml.hook, and then remove the other files and directories in the folder .github. Removes item Gemfile.lock from .gitignore. Creates a new commit to save the changes automatically.Installing DependenciesBefore running for the first time, go to the root directory of your site, and install dependencies as follows:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options: url avatar timezone langCustoming StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/style.scss to the same path on your Jekyll site, and then add the custom style at the end of the style file.Starting from v4.1.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, create a new file _sass/variables-hook.scss and assign new values to the target variable in it.Customing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined by file _data/assets/cross_origin.yml, and you can replace some of them according to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sOr run the site on Docker with the following command:$ docker run -it --rm \\ --volume=\"$PWD:/srv/jekyll\" \\ -p 4000:4000 jekyll/jekyll \\ jekyll serveAfter a while, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using Github ActionsFor security reasons, GitHub Pages build runs on safe mode, which restricts us from using plugins to generate additional page files. Therefore, we can use GitHub Actions to build the site, store the built site files on a new branch, and use that branch as the source of the GitHub Pages service.Quickly check the files needed for GitHub Actions build: Ensure your Jekyll site has the file .github/workflows/pages-deploy.yml. Otherwise, create a new one and fill in the contents of the sample file, and the value of the on.push.branches should be the same as your repo’s default branch name. Ensure your Jekyll site has file tools/deploy.sh. Otherwise, copy it from here to your Jekyll site. Furthermore, if you have committed Gemfile.lock to the repo, and your runtime system is not Linux, don’t forget to update the platform list in the lock file: $ bundle lock --add-platform x86_64-linux After the above steps, rename your repository to &lt;GH_USERNAME&gt;.github.io on GitHub.Now publish your Jekyll site by: Push any commit to remote to trigger the GitHub Actions workflow. Once the build is complete and successful, a new remote branch named gh-pages will appear to store the built site files. Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar, and then in the section Source of GitHub Pages, select the /(root) directory of branch gh-pages as the publishing source. Remember to click Save before leaving. Visit your website at the address indicated by GitHub. Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bOr build the site on Docker:$ docker run -it --rm \\ --env JEKYLL_ENV=production \\ --volume=\"$PWD:/srv/jekyll\" \\ jekyll/jekyll \\ jekyll buildUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server.UpgradingIt depends on how you use the theme: If you are using the theme gem (there will be gem \"jekyll-theme-chirpy\" in the Gemfile), editing the Gemfile and update the version number of the theme gem, for example: - gem \"jekyll-theme-chirpy\", \"~&gt; 3.2\", \"&gt;= 3.2.1\"+ gem \"jekyll-theme-chirpy\", \"~&gt; 3.3\", \"&gt;= 3.3.0\" And then execute the following command: $ bundle update jekyll-theme-chirpy As the version upgrades, the critical files (for details, see the Startup Template) and configuration options will change. Please refer to the Upgrade Guide to keep your repo’s files in sync with the latest version of the theme. If you forked from the source project (there will be gemspec in the Gemfile of your site), then merge the latest upstream tags into your Jekyll site to complete the upgrade.The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts. " }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 15:10:00 +0900", "snippet": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG] # TAG names should always be lowercase--- The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Add author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one.)&lt;author_id&gt;: name: &lt;full name&gt; twitter: &lt;twitter_of_author&gt; url: &lt;homepage_of_author&gt;And then set up the custom author in the post’s YAML block:---author: &lt;author_id&gt;--- Another benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right. Once the position is specified, the image caption should not be added. Normal position Image will be left aligned in below sample: ![Desktop View](/assets/img/sample/mockup.png){: .normal } Float to the left ![Desktop View](/assets/img/sample/mockup.png){: .left } Float to the right ![Desktop View](/assets/img/sample/mockup.png){: .right } ShadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image to the top of the post contents, specify the attribute path, width, height, and alt for the image:---image: path: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. The above section “Size” also mentions this.Starting from Chirpy v5.0.0, the attributes height and width can be abbreviated: height → h, width → w. In addition, the img_path can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.Starting from Chirpy v5.2.0, the property for the preview image is changed to image.path. If upgrading the theme from a prior version, you will have to update posts’ metadata to use new image property.Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value``` The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %} This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts." }, { "title": "Text and Typography", "url": "/posts/text-and-typography/", "categories": "Blogging, Demo", "tags": "typography", "date": "2019-08-08 12:33:00 +0900", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daffodils;Beside the lake, beneath the trees,Fluttering and dancing in the breeze.ListsOrdered list Firstly Secondly ThirdlyUnordered list Chapter Section Paragraph Task list TODO Completed Defeat COVID-19 Vaccine production Economic recovery People smile again Description list Sun the star around which the earth orbits Moon the natural satellite of the earth, visible by reflected light from the sunBlock Quote This line shows the block quote.Prompts An example showing the tip type prompt. An example showing the info type prompt. An example showing the warning type prompt. An example showing the danger type prompt.Tables Company Contact Country Alfreds Futterkiste Maria Anders Germany Island Trading Helen Bennett UK Magazzini Alimentari Riuniti Giovanni Rovelli Italy Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images Default (with caption)Full screen width and center alignment Shadowshadow effect (visible in light mode) Left aligned Float to left “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Float to right “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Mermaid SVG gantt title Adding GANTT diagram functionality to mermaid apple :a, 2017-07-20, 1w banana :crit, b, 2017-07-23, 1d cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then echo \"The command was not successful.\"; #do the needful / exitfi;Specific filename@import \"colors/light-typography\", \"colors/dark-typography\"Reverse Footnote The footnote source &#8617; The 2nd footnote source &#8617; " } ]
